import { fileURLToPath } from 'url'
import { dirname, join, resolve } from 'path'
import sharp from 'sharp'
import fs from 'fs/promises'
import { existsSync, mkdirSync } from 'fs'

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)

const FAVICON_DIR = resolve(__dirname, '../public/favicon')

// Создаем директорию если её нет
if (!existsSync(FAVICON_DIR)) {
	mkdirSync(FAVICON_DIR, { recursive: true })
}

// SVG контент LogoMiniIcon
const svgContent = `
<svg width="44" height="54" viewBox="0 0 44 54" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.49219 35.8593V24.7663H10.4619L14.3044 32.1308L18.1469 24.7663H20.1166V35.8593H18.0662V29.2343L14.6919 35.8593H13.9169L10.5426 29.2343V35.8593H8.49219Z" fill="#4764FE"/>
<path d="M22.0597 35.8439V34.0258L26.9355 29.8968C27.3014 29.5886 27.5597 29.2985 27.7104 29.0263C27.8611 28.7541 27.9364 28.4999 27.9364 28.2636C27.9364 27.9247 27.8638 27.6243 27.7185 27.3623C27.5732 27.0953 27.3687 26.8873 27.105 26.7384C26.8413 26.5843 26.5318 26.5072 26.1766 26.5072C25.8053 26.5072 25.477 26.5894 25.1918 26.7538C24.9119 26.913 24.694 27.1261 24.5379 27.3931C24.3819 27.6551 24.3092 27.9401 24.32 28.2482H22.0597C22.0597 27.4882 22.2346 26.8308 22.5844 26.2761C22.9342 25.7215 23.4212 25.2927 24.0455 24.9897C24.6698 24.6867 25.3963 24.5352 26.2251 24.5352C26.9839 24.5352 27.662 24.6944 28.2593 25.0128C28.8621 25.326 29.3357 25.7651 29.6801 26.3301C30.0245 26.895 30.1967 27.5498 30.1967 28.2945C30.1967 28.844 30.116 29.301 29.9546 29.6657C29.7931 30.0252 29.5536 30.359 29.2361 30.6671C28.9186 30.9701 28.5284 31.3142 28.0656 31.6994L24.9173 34.334L24.7397 33.8718H30.1967V35.8439H22.0597Z" fill="#4764FE"/>
<path d="M23.8867 0.607235C23.9552 0.609083 24.0228 0.610084 24.0913 0.612758C26.5063 0.728303 26.4649 0.731315 26.6188 3.13376C26.911 7.69468 28.6715 11.6249 31.8496 14.9106C32.7259 15.8168 33.6216 16.7053 34.5368 17.5729C35.2002 18.2009 35.1872 18.8049 34.5631 19.4147C33.476 20.4776 32.0811 20.6504 30.8822 19.9815C28.8766 18.8616 27.0083 17.4878 25.1324 16.1492C23.9984 15.3401 22.9905 14.3569 21.8729 13.5226C19.8618 12.0228 18.1334 12.1016 16.2868 13.8391C14.5257 15.4956 12.8449 17.2367 11.1368 18.9491C9.4533 20.6374 7.83474 22.3967 6.07186 23.9978C5.47266 24.5422 4.53776 24.9223 3.72617 24.9854C2.09309 25.1114 1.42471 23.9368 2.23059 22.5253C4.00089 19.426 5.72336 16.2941 7.62522 13.2759C9.25451 10.6905 11.0052 8.16522 12.8856 5.7566C15.4245 2.50467 20.0112 0.46465 23.8867 0.607235ZM31.0722 43.6332C25.4867 43.5601 19.8997 43.4167 14.3145 43.4567C12.7225 43.4682 11.1095 43.9192 9.55266 44.3411C8.62867 44.5919 8.47408 45.4868 8.64517 46.3665C8.80839 47.2014 9.50627 47.2219 10.1543 47.284C11.3055 47.3935 12.463 47.4537 13.6082 47.6026C17.5488 48.1143 21.2247 49.537 24.9026 50.9456C28.413 52.2903 31.9587 53.4543 35.8073 53.005C37.9937 52.7495 39.9815 52.0824 41.4236 50.2844C41.8397 49.7656 41.9417 49.3498 41.5156 48.6804C38.0974 43.3102 36.0782 37.5262 36.4998 31.0494C36.5804 29.8075 36.0411 29.357 34.8272 29.6429C34.3212 29.7622 33.8118 30.039 33.4042 30.3681C31.8926 31.5896 31.5355 33.3509 31.4897 35.1362C31.4187 37.9206 31.5061 40.7084 31.5265 43.6232C31.4001 43.6256 31.2356 43.6352 31.0722 43.6332ZM32.2203 35.9361L32.2205 35.9278L32.2203 35.9361ZM24.7253 51.4568C24.7633 51.2721 24.6599 51.1908 24.6599 51.1908C21.5161 50.1491 18.3825 49.0689 15.2118 48.109C14.736 47.9641 13.9716 48.2366 13.5481 48.5743C12.8528 49.131 13.0811 50.0635 13.9091 50.1865C17.4531 50.7131 21.0079 51.1756 24.5588 51.662C24.7097 51.6074 24.7253 51.4568 24.7253 51.4568ZM8.54602 10.2065C6.07939 12.8916 3.59253 15.5612 1.15733 18.2744C0.587922 18.9079 1.00925 19.7845 1.91207 19.7667C2.46137 19.756 3.23516 19.4722 3.51405 19.0496C5.37886 16.2418 7.13661 13.3626 8.92837 10.5083C8.92837 10.5083 8.95666 10.3778 8.80799 10.2582C8.80799 10.2582 8.6986 10.1512 8.54602 10.2065Z" fill="#4765FF"/>
</svg>
`

// Функция для создания PNG из SVG
async function createPNG(size: number, outputName: string) {
	try {
		await sharp(Buffer.from(svgContent))
			.resize(size, size)
			.png()
			.toFile(join(FAVICON_DIR, outputName))
	} catch (error) {
		console.error(`Error creating PNG ${outputName}:`, error)
		throw error
	}
}

// Создаем иконки разных размеров
const generateFavicons = async () => {
	try {
		const sizes = [16, 32, 180]
		for (const size of sizes) {
			await createPNG(size, `favicon-${size}x${size}.png`)
		}
		console.log('Favicons generated successfully!')
	} catch (error) {
		console.error('Error generating favicons:', error)
		process.exit(1)
	}
}

// Запуск с обработкой ошибок
generateFavicons().catch((error) => {
	console.error('Fatal error:', error)
	process.exit(1)
})
